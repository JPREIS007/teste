# -*- coding: utf-8 -*-
"""Regress達o linear

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ed4z9B6N6aed_CGY-zuDsXlQSQQZ--0z
"""

from scipy import stats

dias_trabalhados = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]
Ganhos = [3, 4, 9, 18, 20, 25, 21, 24, 27, 30, 33, 36, 39, 41, 43, 50, 53, 58, 62, 65]

slop, intercept, r, p, std_err = stats.linregress(dias_trabalhados, Ganhos)

print(slop)
print(intercept)
print(r)
print(p)
print(std_err)

def prever(x):
    return slop * x + intercept

previsao = prever(1)

print(round(r,2))

print(previsao)

from sklearn import linear_model

reg = linear_model.LinearRegression()

X_treino = [[3, 100, 10, 5], [4, 150, 15, 6], [2, 80, 8, 4]]
y_treino = [300, 450, 200]

reg.fit(X_treino, y_treino)

print("Coeficientes:", reg.coef_)
print("Intercepto:", reg.intercept_)

print("Digite os novos dados para previs達o:")
novo_dado = []
novo_dado.append(float(input("Valor 1: ")))
novo_dado.append(float(input("Valor 2: ")))
novo_dado.append(float(input("Valor 3: ")))
novo_dado.append(float(input("Valor 4: ")))

consumo_previsto = reg.predict([novo_dado])

print(f"Consumo de energia previsto: {consumo_previsto[0]:.2f} kWh")

import matplotlib.pyplot as plt
from scipy import stats

x = [6, 7, 5, 8, 4, 9, 7]
y = [70, 80, 60, 90, 50, 95, 85]

slope, intercept, r, p, std_err = stats.linregress(x, y)

def predict_energy(hours):
    return slope * hours + intercept

novo_x = float(input("Digite o novo valor de x para previs達o: "))

consumo_previsto = predict_energy(novo_x)

print(f"Consumo de energia previsto para x = {novo_x}: {consumo_previsto:.2f} kWh")

predicted_energy = list(map(predict_energy, x))

plt.scatter(x, y, label='Dados Originais')
plt.plot(x, predicted_energy, color='red', label='Linha de Regress達o')
plt.show()